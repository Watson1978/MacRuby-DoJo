---
layout: post
title: "WebKit フレームワークを使ってみよう"
date: 2012-03-15 08:52
comments: true
sharing: true
categories: MacRuby
---

[MacRuby Application] テンプレートを用いてプロジェクトを作成すると、あらかじめ Cocoa.framework というフレームワークが読み込まれるようになっています。

![image](/images/ja/webkit/framework.png)

また、*rb_main.rb* で以下のように Cocoa.framework が読み込まれプログラム中から扱えるようになっています。

```ruby
# Loading the Cocoa framework. If you need to load more frameworks, you can
# do that here too.
framework 'Cocoa'
```

<div class="note">
Cocoa.framework は Foundation.framework、AppKit.framework と CoreData.framework を 1 つにまとめたフレームワークとなっています。これらのフレームワークで扱っている UI 部品や API は、プロジェクト作成直後から利用することができます。
</div>


## WebKit.framework を追加する
さっそくフレームワークを追加してみましょう。以下の図のように "+" ボタンをクリックすると、フレームワークを追加することができます。

![image](/images/ja/webkit/add_framework.png)

シートダイアログが表示されるので、追加するフレームワークを選択します。

![image](/images/ja/webkit/choose_framework.png)

*rb_main.rb* で以下のように WebKit.framework を読み込むようにします。

```ruby
# Loading the Cocoa framework. If you need to load more frameworks, you can
# do that here too.
framework 'Cocoa'
framework 'WebKit' # 追加
```

以上で、フレームワークの追加作業が完了です。


## Web View を配置する

![image](/images/ja/webkit/put_webview.png)

Object Library から Web View を Window 上に配置します。


## Web View をアウトレット接続する
*AppDelegate.rb* に webView のアウトレット用のアクセサを追加し、Web View と接続します。

```ruby
class AppDelegate
  attr_accessor :window
  attr_accessor :webView # アウトレット
```

![image](/images/ja/webkit/connect_outlet.png)


## Web サイトを表示する
以下のように、アウトレット接続した `webView` の `mainFrame` に URL のサイトを読み込むように指示すると、さきほど配置した Web View に Web サイトが表示されます。

```ruby
class AppDelegate
  attr_accessor :window
  attr_accessor :webView # アウトレット

  def applicationDidFinishLaunching(a_notification)
    # Insert code here to initialize your application
    url = "http://www.apple.com/"
    nsurl = NSURL.URLWithString(url)
    nsurl_req = NSURLRequest.requestWithURL(nsurl)

    webView.mainFrame.loadRequest(nsurl_req)
  end
end
```

![image](/images/ja/webkit/webview.png)